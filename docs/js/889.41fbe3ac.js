"use strict";(self["webpackChunk_cvtool_docs"]=self["webpackChunk_cvtool_docs"]||[]).push([[889],{889:(e,l,n)=>{n.r(l),n.d(l,{default:()=>v});var a=n(641),t=n(953);const i="<template>\n    <cv-tree :data=\"tree2\">\n    </cv-tree>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref } from 'vue';\nimport { CvTree } from '@cvtool/design';\n\nconst tree2 = ref([\n  {\n    label: '节点1', value: '1', children: [\n      {\n        label: '节点1-1', value: '1-1', children: [\n          { label: '节点1-1-1', value: '1-1-1', children: [] },\n          { label: '节点1-1-2', value: '1-1-2', children: [] },\n          { label: '节点1-1-3', value: '1-1-3', children: [] },\n        ]\n      }\n    ]\n  },\n  {\n    label: '节点2', value: '2', children: [\n      {\n        label: '节点2-1', value: '2-1', children: [\n          { label: '节点2-1-1', value: '2-1-1', children: [] },\n          { label: '节点2-1-2', value: '2-1-2', children: [] },\n          { label: '节点2-1-3', value: '2-1-3', children: [] },\n        ]\n      }\n    ]\n  }\n])\n\nconst label = (item: { name: string }) => { return item.name }\nconst value = (item: { id: string }) => { return item.id }\nconst children = (item: { list: any[] }) => { return item.list ?? [] }\nconst disabled = (item: { status: boolean }) => { return item.status }\nconst arrow = (item: { expand: boolean, list: any[] }) => { return item.expand || item.list.length > 0 }\n\nconst getter = { label, value, children, arrow, disabled }\n<\/script>",r="<template>\n    <cv-tree :data=\"tree3\" :getter=\"getter3\">\n    </cv-tree>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref } from 'vue';\nimport { CvTree } from '@cvtool/design';\n\nconst tree3 = ref([\n  {\n    name: '节点1', id: '1', status: false, list: [\n      {\n        name: '节点1-1', id: '1-1', list: [\n          { name: '节点1-1-1', id: '1-1-1', expand: true, list: [] },\n          { name: '节点1-1-2', id: '1-1-2', status: true, list: [] },\n          { name: '节点1-1-3', id: '1-1-3', list: [] },\n        ]\n      }\n    ]\n  },\n])\n\nconst label3 = (item: { name: string }) => { return item.name }\nconst value3 = (item: { id: string }) => { return item.id }\nconst children3 = (item: { list: any[] }) => { return item.list ?? [] }\nconst disabled3 = (item: { status: boolean }) => { return item.status }\nconst arrow3 = (item: { expand: boolean, list: any[] }) => { return item.expand || item.list.length > 0 }\n\nconst getter3 = { label: label3, value: value3, children: children3, arrow: arrow3, disabled: disabled3 }\n<\/script>",d="<template>\n    <cv-tree :data=\"tree4\" :default-checked=\"defaultExpand4\">\n    </cv-tree>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref } from 'vue';\nimport { CvTree } from '@cvtool/design';\n\nconst defaultExpand4 = [{ label: '节点1-1-1', value: '1-1-1', children: [] }]\nconst tree4 = ref([\n  {\n    label: '节点1', value: '1', children: [\n      {\n        label: '节点1-1', value: '1-1', children: [\n          defaultExpand4[0],\n          { label: '节点1-1-2', value: '1-1-2', children: [] },\n          { label: '节点1-1-3', value: '1-1-3', children: [] },\n        ]\n      }\n    ]\n  },\n  {\n    label: '节点2', value: '2', children: [\n      {\n        label: '节点2-1', value: '2-1', children: [\n          { label: '节点2-1-1', value: '2-1-1', children: [] },\n          { label: '节点2-1-2', value: '2-1-2', children: [] },\n          { label: '节点2-1-3', value: '2-1-3', children: [] },\n        ]\n      }\n    ]\n  }\n])\n<\/script>";var c=n(754);const s=(0,a.pM)({__name:"tree",setup(e){const l=(0,t.KR)([{label:"节点1",value:"1",children:[{label:"节点1-1",value:"1-1",children:[{label:"节点1-1-1",value:"1-1-1",children:[]},{label:"节点1-1-2",value:"1-1-2",children:[]},{label:"节点1-1-3",value:"1-1-3",children:[]}]}]},{label:"节点2",value:"2",children:[{label:"节点2-1",value:"2-1",children:[{label:"节点2-1-1",value:"2-1-1",children:[]},{label:"节点2-1-2",value:"2-1-2",children:[]},{label:"节点2-1-3",value:"2-1-3",children:[]}]}]}]),n=(0,t.KR)([{name:"节点1",id:"1",status:!1,list:[{name:"节点1-1",id:"1-1",list:[{name:"节点1-1-1",id:"1-1-1",expand:!0,list:[]},{name:"节点1-1-2",id:"1-1-2",status:!0,list:[]},{name:"节点1-1-3",id:"1-1-3",list:[]}]}]}]),s=e=>e.name,u=e=>e.id,v=e=>e.list??[],o=e=>e.status,b=e=>e.expand||e.list.length>0,m={label:s,value:u,children:v,arrow:b,disabled:o},h=[{label:"节点1-1-1",value:"1-1-1",children:[]}],p=(0,t.KR)([{label:"节点1",value:"1",children:[{label:"节点1-1",value:"1-1",children:[h[0],{label:"节点1-1-2",value:"1-1-2",children:[]},{label:"节点1-1-3",value:"1-1-3",children:[]}]}]},{label:"节点2",value:"2",children:[{label:"节点2-1",value:"2-1",children:[{label:"节点2-1-1",value:"2-1-1",children:[]},{label:"节点2-1-2",value:"2-1-2",children:[]},{label:"节点2-1-3",value:"2-1-3",children:[]}]}]}]);return(e,s)=>{const u=(0,a.g2)("cv-example");return(0,a.uX)(),(0,a.CE)(a.FK,null,[s[0]||(s[0]=(0,a.Lk)("div",{class:"doc-text"}," 用清晰的层级结构展示信息，可展开或折叠。 ",-1)),s[1]||(s[1]=(0,a.Lk)("div",{class:"doc-sub-title"}," 基础用法 ",-1)),s[2]||(s[2]=(0,a.Lk)("div",{class:"doc-text"}," 基础的树形结构展示。 ",-1)),(0,a.bF)(u,{code:(0,t.R1)(i)},{default:(0,a.k6)(()=>[(0,a.bF)((0,t.R1)(c.g9),{data:l.value},null,8,["data"])]),_:1},8,["code"]),s[3]||(s[3]=(0,a.Lk)("div",{class:"doc-sub-title"}," 配置参数 ",-1)),(0,a.bF)(u,{code:(0,t.R1)(r)},{default:(0,a.k6)(()=>[(0,a.bF)((0,t.R1)(c.g9),{data:n.value,getter:m},null,8,["data"])]),_:1},8,["code"]),s[4]||(s[4]=(0,a.Lk)("div",{class:"doc-sub-title"}," 默认展开 ",-1)),s[5]||(s[5]=(0,a.Lk)("div",{class:"doc-text"}," 组件创建时默认展开指定项 ",-1)),(0,a.bF)(u,{code:(0,t.R1)(d)},{default:(0,a.k6)(()=>[(0,a.bF)((0,t.R1)(c.g9),{data:p.value,"default-checked":h},null,8,["data"])]),_:1},8,["code"])],64)}}}),u=s,v=u}}]);