"use strict";(self["webpackChunk_cvtool_docs"]=self["webpackChunk_cvtool_docs"]||[]).push([[95],{95:(n,l,t)=>{t.r(l),t.d(l,{default:()=>a});var c=t(641),e=t(953),o=t(33);const s='<template>\n    <cv-row style="height: 400px">\n        <cv-col :span="12" style="height: 100%;">\n            <cv-scroll ref="scroll2">\n                <p v-for="i in state2.list" :key="i">\n                    <cv-popover #trigger="">\n                    第{{ i }}项数据\n                    </cv-popover>\n                </p>\n                <div id="local">\n                描点\n                </div>\n            </cv-scroll>\n        </cv-col>\n        <cv-col :span="12">\n            <div>\n                <cv-button @click="add2">\n                添加数据\n                </cv-button>\n                <cv-button @click="back2">\n                返回顶部\n                </cv-button>\n                <cv-button @click="scrollDom2">\n                滚动到指定元素\n                </cv-button>\n            </div>\n        </cv-col>\n    </cv-row>\n</template>\n\n<script lang="ts" setup>\nimport { ref } from \'vue\';\nimport { CvRow, CvCol, CvButton, CvScroll, CvPopover } from \'@cvtool/design\';\n\nconst state2 = ref({\n  list: [] as number[],\n  currnt: 0,\n  count: 8,\n})\nconst add2 = () => {\n  for (let i = 0; i\n< state2.value.count; i++) {\n    state2.value.list.push(state2.value.currnt)\n    state2.value.currnt++\n  }\n}\nadd2()\n\nconst scroll2 = ref()\nconst back2 = () => {\n  scroll2.value.scrollTo(0)\n}\nconst scrollDom2 = () => {\n  scroll2.value.scrollTo(document.getElementById(\'local\'))\n}\n<\/script>';var u=t(754);const r=(0,c.pM)({__name:"scroll",setup(n){const l=(0,e.KR)({list:[],currnt:0,count:8}),t=()=>{for(let n=0;n<l.value.count;n++)l.value.list.push(l.value.currnt),l.value.currnt++};t();const r=(0,e.KR)(),v=()=>{r.value.scrollTo(0)},a=()=>{r.value.scrollTo(document.getElementById("local"))};return(n,i)=>{const d=(0,c.g2)("cv-example");return(0,c.uX)(),(0,c.CE)(c.FK,null,[i[4]||(i[4]=(0,c.Lk)("div",{class:"doc-text"}," 用于替换浏览器原生滚动条。 ",-1)),i[5]||(i[5]=(0,c.Lk)("div",{class:"doc-sub-title"}," 基础用法 ",-1)),(0,c.bF)(d,{code:(0,e.R1)(s)},{default:(0,c.k6)(()=>[(0,c.bF)((0,e.R1)(u.IP),{style:{height:"400px"}},{default:(0,c.k6)(()=>[(0,c.bF)((0,e.R1)(u.Q4),{span:12,style:{height:"100%"}},{default:(0,c.k6)(()=>[(0,c.bF)((0,e.R1)(u.v3),{ref_key:"scroll2",ref:r},{default:(0,c.k6)(()=>[((0,c.uX)(!0),(0,c.CE)(c.FK,null,(0,c.pI)(l.value.list,n=>((0,c.uX)(),(0,c.CE)("p",{key:n},[(0,c.bF)((0,e.R1)(u.J),null,{trigger:(0,c.k6)(()=>[(0,c.eW)(" 第"+(0,o.v_)(n)+"项数据 ",1)]),_:2},1024)]))),128)),i[0]||(i[0]=(0,c.Lk)("div",{id:"local"}," 描点 ",-1))]),_:1},512)]),_:1}),(0,c.bF)((0,e.R1)(u.Q4),{span:12},{default:(0,c.k6)(()=>[(0,c.Lk)("div",null,[(0,c.bF)((0,e.R1)(u.iG),{onClick:t},{default:(0,c.k6)(()=>[...i[1]||(i[1]=[(0,c.eW)(" 添加数据 ",-1)])]),_:1}),(0,c.bF)((0,e.R1)(u.iG),{onClick:v},{default:(0,c.k6)(()=>[...i[2]||(i[2]=[(0,c.eW)(" 返回顶部 ",-1)])]),_:1}),(0,c.bF)((0,e.R1)(u.iG),{onClick:a},{default:(0,c.k6)(()=>[...i[3]||(i[3]=[(0,c.eW)(" 滚动到指定元素 ",-1)])]),_:1})])]),_:1})]),_:1})]),_:1},8,["code"])],64)}}}),v=r,a=v}}]);